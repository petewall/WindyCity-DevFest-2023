server:
  extraFlags:
    - enable-feature=remote-write-receiver
    - web.config.file=/etc/config/web.yml

  probeHeaders:
  - name: "Authorization"
    value: "Basic cHJvbXVzZXI6cHJvbWV0aGV1c3Bhc3N3b3Jk"

configmapReload:
  prometheus:
    enabled: false

serverFiles:
  prometheus.yml:
    scrape_configs: []
    remote_write:
    - url: "https://prometheus-prod-13-prod-us-east-0.grafana.net/api/prom/push"
      basic_auth:
        username: "1019005"
        password: glc_eyJvIjoiNzc1NzA0IiwibiI6Im90ZWwtY29sbGVjdG9yLXRva2VuIiwiayI6IkdENDY0SThjQTJ3QjdJMlNVN3Q5UXZkNyIsIm0iOnsiciI6InByb2QtdXMtZWFzdC0wIn19

  web.yml:
    basic_auth_users:
      promuser: $2a$12$1UJsAG4QnhjjDzqcSVkZmeDxxjgIFOAmzfuVTybTuhhDnYgfuAbAq  # "prometheuspassword"
  recording_rules.yml:
    groups:
    - name: k8s.rules
      rules:
      - expr: |
          sum by (cluster, namespace, pod, container) (
            irate(container_cpu_usage_seconds_total{job!="", image!=""}[5m])
          ) * on (cluster, namespace, pod) group_left(node) topk by (cluster, namespace, pod) (
            1, max by(cluster, namespace, pod, node) (kube_pod_info{node!=""})
          )
        record: node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate
      - expr: |
          container_memory_working_set_bytes{job!="", image!=""}
          * on (cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1,
            max by(cluster, namespace, pod, node) (kube_pod_info{node!=""})
          )
        record: node_namespace_pod_container:container_memory_working_set_bytes
      - expr: |
          container_memory_rss{job!="", image!=""}
          * on (cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1,
            max by(cluster, namespace, pod, node) (kube_pod_info{node!=""})
          )
        record: node_namespace_pod_container:container_memory_rss
      - expr: |
          container_memory_cache{job!="", image!=""}
          * on (cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1,
            max by(cluster, namespace, pod, node) (kube_pod_info{node!=""})
          )
        record: node_namespace_pod_container:container_memory_cache
      - expr: |
          container_memory_swap{job!="", image!=""}
          * on (cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1,
            max by(cluster, namespace, pod, node) (kube_pod_info{node!=""})
          )
        record: node_namespace_pod_container:container_memory_swap
      - expr: |
          kube_pod_container_resource_requests{resource="memory",job!=""}  * on (namespace, pod, cluster)
          group_left() max by (namespace, pod, cluster) (
            (kube_pod_status_phase{phase=~"Pending|Running"} == 1)
          )
        record: cluster:namespace:pod_memory:active:kube_pod_container_resource_requests
      - expr: |
          sum by (namespace, cluster) (
              sum by (namespace, pod, cluster) (
                  max by (namespace, pod, container, cluster) (
                    kube_pod_container_resource_requests{resource="memory",job!=""}
                  ) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (
                    kube_pod_status_phase{phase=~"Pending|Running"} == 1
                  )
              )
          )
        record: namespace_memory:kube_pod_container_resource_requests:sum
      - expr: |
          kube_pod_container_resource_requests{resource="cpu",job!=""}  * on (namespace, pod, cluster)
          group_left() max by (namespace, pod, cluster) (
            (kube_pod_status_phase{phase=~"Pending|Running"} == 1)
          )
        record: cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests
      - expr: |
          sum by (namespace, cluster) (
              sum by (namespace, pod, cluster) (
                  max by (namespace, pod, container, cluster) (
                    kube_pod_container_resource_requests{resource="cpu",job!=""}
                  ) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (
                    kube_pod_status_phase{phase=~"Pending|Running"} == 1
                  )
              )
          )
        record: namespace_cpu:kube_pod_container_resource_requests:sum
      - expr: |
          kube_pod_container_resource_limits{resource="memory",job!=""}  * on (namespace, pod, cluster)
          group_left() max by (namespace, pod, cluster) (
            (kube_pod_status_phase{phase=~"Pending|Running"} == 1)
          )
        record: cluster:namespace:pod_memory:active:kube_pod_container_resource_limits
      - expr: |
          sum by (namespace, cluster) (
              sum by (namespace, pod, cluster) (
                  max by (namespace, pod, container, cluster) (
                    kube_pod_container_resource_limits{resource="memory",job!=""}
                  ) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (
                    kube_pod_status_phase{phase=~"Pending|Running"} == 1
                  )
              )
          )
        record: namespace_memory:kube_pod_container_resource_limits:sum
      - expr: |
          kube_pod_container_resource_limits{resource="cpu",job!=""}  * on (namespace, pod, cluster)
          group_left() max by (namespace, pod, cluster) (
            (kube_pod_status_phase{phase=~"Pending|Running"} == 1)
            )
        record: cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits
      - expr: |
          sum by (namespace, cluster) (
              sum by (namespace, pod, cluster) (
                  max by (namespace, pod, container, cluster) (
                    kube_pod_container_resource_limits{resource="cpu",job!=""}
                  ) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (
                    kube_pod_status_phase{phase=~"Pending|Running"} == 1
                  )
              )
          )
        record: namespace_cpu:kube_pod_container_resource_limits:sum
      - expr: |
          max by (cluster, namespace, workload, pod) (
            label_replace(
              label_replace(
                kube_pod_owner{job!="", owner_kind="ReplicaSet"},
                "replicaset", "$1", "owner_name", "(.*)"
              ) * on(replicaset, namespace) group_left(owner_name) topk by(replicaset, namespace) (
                1, max by (replicaset, namespace, owner_name) (
                  kube_replicaset_owner{job!=""}
                )
              ),
              "workload", "$1", "owner_name", "(.*)"
            )
          )
        labels:
          workload_type: deployment
        record: namespace_workload_pod:kube_pod_owner:relabel
      - expr: |
          max by (cluster, namespace, workload, pod) (
            label_replace(
              kube_pod_owner{job!="", owner_kind="DaemonSet"},
              "workload", "$1", "owner_name", "(.*)"
            )
          )
        labels:
          workload_type: daemonset
        record: namespace_workload_pod:kube_pod_owner:relabel
      - expr: |
          max by (cluster, namespace, workload, pod) (
            label_replace(
              kube_pod_owner{job!="", owner_kind="StatefulSet"},
              "workload", "$1", "owner_name", "(.*)"
            )
          )
        labels:
          workload_type: statefulset
        record: namespace_workload_pod:kube_pod_owner:relabel
      - expr: |
          max by (cluster, namespace, workload, pod) (
            label_replace(
              kube_pod_owner{job!="", owner_kind="Job"},
              "workload", "$1", "owner_name", "(.*)"
            )
          )
        labels:
          workload_type: job
        record: namespace_workload_pod:kube_pod_owner:relabel
    - name: k8s.windows-rules.container_cpu_usage_seconds_total
      rules:
      - expr: |
          label_replace(
            label_replace(
              windows_container_cpu_usage_seconds_total{} * on(container_id) group_left(namespace, pod, container)
              topk by (container_id) (1, kube_pod_container_info{container_id != ""}),
              "id", "$1", "container_id", "(.*)"
            ), "image", "<not-supported-on-windows>", "", "")
        record: container_cpu_usage_seconds_total
    - name: k8s.windows-rules.container_memory_working_set_bytes
      rules:
      - expr: |
          label_replace(
            label_replace(
              windows_container_memory_usage_private_working_set_bytes{} * on(container_id) group_left(namespace, pod, container)
              topk by (container_id) (1, kube_pod_container_info{container_id != ""}),
              "id", "$1", "container_id", "(.*)"
            ), "image", "<not-supported-on-windows>", "", "")
        record: container_memory_working_set_bytes
    - name: k8s.windows-rules.container_memory_rss
      rules:
      - expr: |
          label_replace(
            label_replace(
              windows_container_memory_usage_commit_bytes{} * on(container_id) group_left(namespace, pod, container)
              topk by (container_id) (1, kube_pod_container_info{container_id != ""}),
              "id", "$1", "container_id", "(.*)"
            ), "image", "<not-supported-on-windows>", "", "")
        record: container_memory_rss

    - "name": "kube-apiserver-availability.rules"
      "interval": "3m"
      "rules":
      - "expr": |
          avg_over_time(code_verb:apiserver_request_total:increase1h[30d]) * 24 * 30
        "record": "code_verb:apiserver_request_total:increase30d"
      - "expr": |
          sum by (cluster, code) (code_verb:apiserver_request_total:increase30d{verb=~"LIST|GET"})
        "labels":
          "verb": "read"
        "record": "code:apiserver_request_total:increase30d"
      - "expr": |
          sum by (cluster, code) (code_verb:apiserver_request_total:increase30d{verb=~"POST|PUT|PATCH|DELETE"})
        "labels":
          "verb": "write"
        "record": "code:apiserver_request_total:increase30d"
      - "expr": |
          sum by (cluster, verb, scope) (increase(apiserver_request_slo_duration_seconds_count[1h]))
        "record": "cluster_verb_scope:apiserver_request_slo_duration_seconds_count:increase1h"
      - "expr": |
          sum by (cluster, verb, scope) (avg_over_time(cluster_verb_scope:apiserver_request_slo_duration_seconds_count:increase1h[30d]) * 24 * 30)
        "record": "cluster_verb_scope:apiserver_request_slo_duration_seconds_count:increase30d"
      - "expr": |
          sum by (cluster, verb, scope, le) (increase(apiserver_request_slo_duration_seconds_bucket[1h]))
        "record": "cluster_verb_scope_le:apiserver_request_slo_duration_seconds_bucket:increase1h"
      - "expr": |
          sum by (cluster, verb, scope, le) (avg_over_time(cluster_verb_scope_le:apiserver_request_slo_duration_seconds_bucket:increase1h[30d]) * 24 * 30)
        "record": "cluster_verb_scope_le:apiserver_request_slo_duration_seconds_bucket:increase30d"
      - "expr": |
          1 - (
            (
              # write too slow
              sum by (cluster) (cluster_verb_scope:apiserver_request_slo_duration_seconds_count:increase30d{verb=~"POST|PUT|PATCH|DELETE"})
              -
              sum by (cluster) (cluster_verb_scope_le:apiserver_request_slo_duration_seconds_bucket:increase30d{verb=~"POST|PUT|PATCH|DELETE",le="1"})
            ) +
            (
              # read too slow
              sum by (cluster) (cluster_verb_scope:apiserver_request_slo_duration_seconds_count:increase30d{verb=~"LIST|GET"})
              -
              (
                (
                  sum by (cluster) (cluster_verb_scope_le:apiserver_request_slo_duration_seconds_bucket:increase30d{verb=~"LIST|GET",scope=~"resource|",le="1"})
                  or
                  vector(0)
                )
                +
                sum by (cluster) (cluster_verb_scope_le:apiserver_request_slo_duration_seconds_bucket:increase30d{verb=~"LIST|GET",scope="namespace",le="5"})
                +
                sum by (cluster) (cluster_verb_scope_le:apiserver_request_slo_duration_seconds_bucket:increase30d{verb=~"LIST|GET",scope="cluster",le="30"})
              )
            ) +
            # errors
            sum by (cluster) (code:apiserver_request_total:increase30d{code=~"5.."} or vector(0))
          )
          /
          sum by (cluster) (code:apiserver_request_total:increase30d)
        "labels":
          "verb": "all"
        "record": "apiserver_request:availability30d"
      - "expr": |
          1 - (
            sum by (cluster) (cluster_verb_scope:apiserver_request_slo_duration_seconds_count:increase30d{verb=~"LIST|GET"})
            -
            (
              # too slow
              (
                sum by (cluster) (cluster_verb_scope_le:apiserver_request_slo_duration_seconds_bucket:increase30d{verb=~"LIST|GET",scope=~"resource|",le="1"})
                or
                vector(0)
              )
              +
              sum by (cluster) (cluster_verb_scope_le:apiserver_request_slo_duration_seconds_bucket:increase30d{verb=~"LIST|GET",scope="namespace",le="5"})
              +
              sum by (cluster) (cluster_verb_scope_le:apiserver_request_slo_duration_seconds_bucket:increase30d{verb=~"LIST|GET",scope="cluster",le="30"})
            )
            +
            # errors
            sum by (cluster) (code:apiserver_request_total:increase30d{verb="read",code=~"5.."} or vector(0))
          )
          /
          sum by (cluster) (code:apiserver_request_total:increase30d{verb="read"})
        "labels":
          "verb": "read"
        "record": "apiserver_request:availability30d"
      - "expr": |
          1 - (
            (
              # too slow
              sum by (cluster) (cluster_verb_scope:apiserver_request_slo_duration_seconds_count:increase30d{verb=~"POST|PUT|PATCH|DELETE"})
              -
              sum by (cluster) (cluster_verb_scope_le:apiserver_request_slo_duration_seconds_bucket:increase30d{verb=~"POST|PUT|PATCH|DELETE",le="1"})
            )
            +
            # errors
            sum by (cluster) (code:apiserver_request_total:increase30d{verb="write",code=~"5.."} or vector(0))
          )
          /
          sum by (cluster) (code:apiserver_request_total:increase30d{verb="write"})
        "labels":
          "verb": "write"
        "record": "apiserver_request:availability30d"
      - "expr": |
          sum by (cluster,code,resource) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET"}[5m]))
        "labels":
          "verb": "read"
        "record": "code_resource:apiserver_request_total:rate5m"
      - "expr": |
          sum by (cluster,code,resource) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE"}[5m]))
        "labels":
          "verb": "write"
        "record": "code_resource:apiserver_request_total:rate5m"
      - "expr": |
          sum by (cluster, code, verb) (increase(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET|POST|PUT|PATCH|DELETE",code=~"2.."}[1h]))
        "record": "code_verb:apiserver_request_total:increase1h"
      - "expr": |
          sum by (cluster, code, verb) (increase(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET|POST|PUT|PATCH|DELETE",code=~"3.."}[1h]))
        "record": "code_verb:apiserver_request_total:increase1h"
      - "expr": |
          sum by (cluster, code, verb) (increase(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET|POST|PUT|PATCH|DELETE",code=~"4.."}[1h]))
        "record": "code_verb:apiserver_request_total:increase1h"
      - "expr": |
          sum by (cluster, code, verb) (increase(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET|POST|PUT|PATCH|DELETE",code=~"5.."}[1h]))
        "record": "code_verb:apiserver_request_total:increase1h"



alertmanager:
  enabled: false

kube-state-metrics:
  enabled: false

prometheus-node-exporter:
  enabled: false

prometheus-pushgateway:
  enabled: false
